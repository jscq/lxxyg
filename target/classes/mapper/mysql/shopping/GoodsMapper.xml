<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chengqing.model.shopping.Goods">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" readOnly="true"/>
	<!-- 使用Memcached分布式缓存 -->
	<!--  
	<cache type="org.mybatis.caches.memcached.MemcachedCache" />
	-->

	<resultMap id="BaseResultMap" type="com.chengqing.model.shopping.Goods">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="sn" property="sn" jdbcType="INTEGER" />
		<result column="createtime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updatetime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="validfrom" property="validFrom" jdbcType="TIMESTAMP" />
		<result column="validto" property="validTo" jdbcType="TIMESTAMP" />
		<result column="createuserid" property="createUserId" jdbcType="VARCHAR" />
		<result column="updateuserid" property="updateUserId" jdbcType="VARCHAR" />
		<result column="classifyId" property="classify.id" jdbcType="VARCHAR" />
		<result column="goodsImage" property="goodsImage" jdbcType="VARCHAR" />
		<result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
		<result column="hasDiscount" property="hasDiscount" jdbcType="INTEGER" />
		<result column="goodsPrice" property="goodsPrice" jdbcType="DOUBLE" />
		<result column="goodsDiscount" property="goodsDiscount" jdbcType="DOUBLE" />
		<result column="goodsOriginalPrice" property="goodsOriginalPrice" jdbcType="DOUBLE" />
		<result column="goodsSalable" property="goodsSalable" jdbcType="INTEGER" />
		<result column="goodsSold" property="goodsSold" jdbcType="DOUBLE" />
		<result column="goodsResidual" property="goodsResidual" jdbcType="DOUBLE" />
	</resultMap>
	
	<sql id="Base_Column_List">
		a.id as id,
		a.version as version,
		a.createTime as createTime,
		a.updateTime as updateTime,
		a.createUserId as createUserId,
		a.updateUserId as updateUserId,
		a.validFrom as validFrom,
		a.validTo as validTo,
		a.sn as sn,
		a.classifyId as classifyId,
		b.classifyName as classifyName,
		a.goodsImage as goodsImage,
		a.goodsName as goodsName,
		a.hasDiscount as hasDiscount,
		a.goodsPrice as goodsPrice,
		a.goodsDiscount as goodsDiscount,
		a.goodsOriginalPrice as goodsOriginalPrice,
		a.goodsSalable as goodsSalable,
		a.goodsSold as goodsSold,
		a.goodsResidual as goodsResidual
	</sql>
	
	<!-- 根据ID查询 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
			a.*
		from goods a
		where a.id = #{id}
	</select>	
	
	<!-- 商品list页面查询 -->
	<select id="select" resultType="java.util.Map" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from goods a
		left join classify b on a.classifyId = b.id
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 商品分类list页面查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id)
		from goods
		<include refid="Base_Where_Clause" />
	</select>
	
	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id = #{id}</if>
				<if test="null!=classifyName and ''!=classifyName">and classifyName like CONCAT('%',#{classifynName},'%')</if>
				<if test="null!=classifyCode and ''!=classifyCode">and classifyCode like CONCAT('%',#{classifyCode},'%')</if>
			</trim>
		</where>
		
		
		<if test="start != null and rows != null">
			order by createTime desc
		
			limit #{start}, #{rows}
		</if>
	</sql>
		
	<!-- 添加 -->	
	<insert id="insert" parameterType="com.chengqing.model.shopping.Classify">
		insert into goods(
			id, 
			version, 
			createTime,
			createUserId,
			validFrom,
			validTo,
			sn,
			classifyId,
			goodsImage,
			goodsName,
			hasDiscount,
			goodsPrice,
			goodsDiscount,
			goodsOriginalPrice,
			goodsSalable,
			goodsSold,
			goodsResidual
		)
		values (
			#{id}, 
			#{version}, 
			#{createTime},
			#{createUserId},
			#{validFrom},
			#{validTo},
			#{sn},
			#{classify.id},
			#{goodsImage},
			#{goodsName},
			#{hasDiscount},
			#{goodsPrice},
			#{goodsDiscount},
			#{goodsOriginalPrice},
			#{goodsSalable},
			#{goodsSold},
			#{goodsResidual}
		)
	</insert>
	
	<!-- 删除 -->
	<delete id="delete">
		delete from goods
	</delete>
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.String">
		delete from goods
		where id = #{id}
	</delete>
	
	<!-- 通过ID更新 -->
	<update id="updateByIdSelective" parameterType="com.chengqing.model.shopping.Classify">
		update goods
		<set>
			classifyId = #{classify.id},
			goodsImage = #{goodsImage},
			goodsName = #{goodsName},
			hasDiscount = #{hasDiscount},
			goodsPrice = #{goodsPrice},
			goodsDiscount = #{goodsDiscount},
			goodsOriginalPrice = #{goodsOriginalPrice},
			goodsSalable = #{goodsSalable},
			goodsSold = #{goodsSold},
			goodsResidual = #{goodsResidual},
			<if test="null!=updateTime">updateTime = #{updateTime},</if>
			<if test="null!=updateUserId and ''!=updateUserId">updateUserId = #{updateUserId},</if>
			<if test="null!=validFrom">validFrom = #{validFrom},</if>
			<if test="null!=validTo">validTo = #{validTo},</if>
			<if test="null!=version">version = #{version},</if>
		</set>
		where id = #{id}
	</update>
	
	
</mapper>